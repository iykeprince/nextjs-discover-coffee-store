import { useEffect, createContext } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import Banner from '../components/banner'
import Card from '../components/card'
import styles from '../styles/Home.module.css'
import coffeeStoresData from '../coffee-stores.json'
import { fetchCoffeeStores } from '../lib/coffee-store'
import useTrackLocation from '../hooks/use-track-location'

const StoreContext = createContext();




const StoreProvider = ({ children }) => {
  const [state, dispatch] = useReducer()
  return <StoreContext.Provider value={{ state, dispatch }}>
    {children}
  </StoreContext.Provider>
}

export async function getStaticProps(context) {
  console.log('hi GetStaticProps', context)

  const coffeeStores = await fetchCoffeeStores()
  return {
    props: {
      coffeeStores,
    }
  }
}

export default function Home(props) {
  const { handleTrackLocation, latLong, locationErrorMsg, isFindingLocation } = useTrackLocation();

  useEffect(() => {

    const getCoffeeStore = async () => {
      try {
        const coffeeStores = await fetchCoffeeStores()
        console.log({ coffeeStores })
      } catch (error) {
        console.log({ error })
      }
    }

    if (latLong) {
      getCoffeeStore();
    }

  }, [latLong])


  const handleOnBannerBtnClick = () => {
    console.log("hi buanner button");
    handleTrackLocation();
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>

        <Banner buttonText={isFindingLocation ? "Locating..." : "Views stores nearby"} handleOnClick={handleOnBannerBtnClick} />
        {locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
        <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={400} />
        </div>

        {props.coffeeStores.length > 0 && <>
          <h2 className={styles.heading2}>Toronto stores</h2>
          <div className={styles.cardLayout}>
            {props.coffeeStores.map((coffeeStore) => {
              return <Card key={coffeeStore.id} className={styles.card} name={coffeeStore.name} imgUrl={coffeeStore.imgUrl} href={`/coffee-store/${coffeeStore.id}`} />
            })}
          </div>
        </>}

      </main>

      <footer className={styles.footer}>

      </footer>
    </div>
  )
}
